[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "omnicache"
version = "0.1.0"
description = "Universal caching library with modern strategies and framework integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    { name = "Khalid Mohamed Elborai", email = "elboraikhalid@gmail.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Caching",
]
requires-python = ">=3.11"
dependencies = [
    "redis>=6.4.0",
    "typing-extensions>=4.5.0",
]

[project.optional-dependencies]
fastapi = [
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
]
redis = [
    "redis>=4.5.0",
    "hiredis>=2.2.0",
]
cli = [
    "click>=8.0.0",
    "rich>=13.0.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
all = [
    "omnicache[fastapi,redis,cli]",
]

[project.scripts]
omnicache = "omnicache.cli.main:main"

[project.urls]
Homepage = "https://github.com/omnicache/omnicache"
Documentation = "https://omnicache.readthedocs.io"
Repository = "https://github.com/omnicache/omnicache"
Issues = "https://github.com/omnicache/omnicache/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["omnicache"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["redis.*", "hiredis.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "contract: marks tests as contract tests",
    "benchmark: marks tests as performance benchmarks",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/omnicache"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "black>=25.9.0",
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=7.0.0",
]
